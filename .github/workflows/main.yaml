name: Build and deploy

on:
  workflow_dispatch:
  push:
    branches: [main]


jobs:
  build:
    runs-on: ubuntu-latest
    environment: AWS
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
      AWS_DEFAULT_OUTPUT: json
    steps:
      - uses: actions/checkout@v2
        name: Checkout

      - name: Set current time
        run: echo "CURRENT_TIME=$(date +%s)" >> $GITHUB_ENV

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install awscli

      - name: Pack everything
        run: |
          cd src
          zip -r ../src-${{ env.CURRENT_TIME }}.zip *
          cd ..
          aws s3 cp src-${{ env.CURRENT_TIME }}.zip s3://code.mlesniak.com

      # Clear base path, since it's managed outside the template
      - name: Remove base path if possible
        continue-on-error: true
        run: |
          aws apigateway delete-base-path-mapping --domain-name dev.mlesniak.com --base-path "demo"

      # Forces redeployment of the lambda as well
      # Note: initial bootstrap via create-stack has to be done
      #       manually (once in the beginning).
      - name: Create or update stack
        run: |
          STACK_NAME="demo"
          TEMPLATE_FILE="lambda.yaml"
          
          # Check if the stack exists
          aws cloudformation describe-stacks --stack-name $STACK_NAME > /dev/null 2>&1
          
          # Capture the exit code of the previous command
          STATUS=$?
          
          if [ $STATUS -eq 0 ]; then
            echo "Stack exists, updating stack..."
            # Update the stack
            aws cloudformation update-stack --stack-name $STACK_NAME \
              --template-body file://$TEMPLATE_FILE \
              --parameters ParameterKey=LambdaCodeVersion,ParameterValue=${{ env.CURRENT_TIME }} \
              --capabilities CAPABILITY_IAM
          else
            echo "Stack does not exist, creating stack..."
            aws cloudformation create-stack --stack-name $STACK_NAME \
              --template-body file://$TEMPLATE_FILE \
              --parameters ParameterKey=LambdaCodeVersion,ParameterValue=${{ env.CURRENT_TIME }} \
              --capabilities CAPABILITY_IAM 
          fi

      # Create base path to our custom domain
      - name: Create base path
        run: |
          aws apigateway create-base-path-mapping \
            --domain-name dev.mlesniak.com \
            --rest-api-id om8w6g3evh \
            --stage prod \
            --base-path "demo"

